priority -50

snippet iti "it (js, inject)" b
it('${1:description}', inject(function($2) {
	$0
}));
endsnippet

snippet befi "before each (js, inject)" b
beforeEach(inject(function($1) {
	$0
}));
endsnippet

snippet aconf "angular config" i
config(function($1) {
	$0
});
endsnippet

snippet acont "angular controller" i
controller('${1:name}', [${2}function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	$0
}]);
endsnippet

snippet aconts "angular controller with scope" i
controller('${1:name}', [${2:'$scope', }function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	$0
}]);
endsnippet

snippet adir "angular directive" i
directive('${1}', [${2}function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	return {
		restrict: '${3:EA}',
		link: function(scope, element, attrs) {
			${0}
		}
	};
}]);
endsnippet

snippet adirs "angular directive with scope" i
directive('${1}', [${2:'$scope', }function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	return {
		restrict: '${3:EA}',
		link: function(scope, element, attrs) {
			${0}
		}
	};
}]);
endsnippet

snippet afact "angular factory" i
factory('${1:name}', [${2}function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	$0
}]);
endsnippet

snippet afacts "angular factory with scope" i
factory('${1:name}', [${2:'$scope', }function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	$0
}]);
endsnippet

snippet aserv "angular service" i
service('${1:name}', [${2}function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	$0
}]);
endsnippet

snippet aservs "angular service" i
service('${1:name}', [${2:'$scope', }function(${2/('|")([A-Z_$]+)?\1?((, ?)$)?/$2(?3::$4)/ig}) {
	$0
}]);
endsnippet

snippet _ctrl "Description" b
'use strict';

class ${1:NameCtrl} {
  constructor() {
		$2
  }
}

$1.$inject = [];

export default $1;
endsnippet

snippet _test_service "Test an angular service with jasmine" b
'use strict';

describe('${1:Service}', function() {
  var $1;

  beforeEach(module('${2:moduleName}'));
  beforeEach(inject(function(_$1_) {
    $1 = _$1_;
  }));

  $0

});
endsnippet

snippet _test_directive "Test an angular directive with jasmine" b
'use strict';

describe('${1:directiveName} Directive', function() {
  var scope, element;

  beforeEach(module('${2:moduleName}'));

  beforeEach(inject(function($compile, $rootScope) {
    scope = $rootScope.$new();
    element = $compile([
      '<${3:directiveTag}>',
      '</$3>'
    ].join(''))(scope);
  }));

  it('works', function() {
    scope.$digest();
		// write expectations then
		$0
  });
});
endsnippet

snippet _service "Angular service" b
'use strict';

var $2;

class ${1:ServiceClass} {
  constructor(_$2) {
		$2 = _$2;
		$0
  }
}

$1.$inject = ['${2:dependency}'];

export default $1;
endsnippet

snippet _directive "Angular directive ES6" b
'use strict';

class ${1:Name}Directive {
  constructor() {
    //this.restrict = 'E';
    //this.templateUrl = 'components/visual_select/visual_select.html';
    //this.controller = VisualSelectCtrl;
    //this.controllerAs = 'select';
		//this.bindToController = true;
    this.scope = {};
  }

  static factory() {
    return new $1Directive();
  }
}

$1Directive.$inject = [];

export default $1Directive;
endsnippet
